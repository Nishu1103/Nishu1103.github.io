---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body>
		<Header />
		<main>
			<div class="terminal-window">
				<div class="terminal-header">
					<div class="terminal-buttons">
						<span class="btn btn-red"></span>
						<span class="btn btn-yellow"></span>
						<span class="btn btn-green"></span>
					</div>
					<div class="terminal-title">{title}</div>
				</div>
				<div class="terminal-body">
					<div class="terminal-line">
						<span class="prompt">nishant@dev:~$</span>
						<span class="command">cat blog/{title.toLowerCase().replace(/\s+/g, '-')}.md</span>
					</div>
					<div class="terminal-output">
						<div class="blog-meta">
							<div class="blog-header">
								<h1>{title}</h1>
								<div class="blog-date">
									<FormattedDate date={pubDate} />
									{updatedDate && (
										<span class="last-updated">
											‚Ä¢ Updated: <FormattedDate date={updatedDate} />
										</span>
									)}
								</div>
								<div class="blog-description">
									{description}
								</div>
								{tags && tags.length > 0 && (
									<div class="blog-tags">
										{tags.map((tag) => (
											<span class="tag">#{tag}</span>
										))}
									</div>
								)}
							</div>
						</div>
					</div>

					<div class="terminal-line">
						<span class="prompt">nishant@dev:~$</span>
						<span class="command">less -R</span>
					</div>
					<div class="terminal-output">
						<div class="blog-content">
							<slot />
						</div>
					</div>

					<div class="terminal-line">
						<span class="prompt">nishant@dev:~$</span>
						<span class="command">cd ..</span>
					</div>
					<div class="terminal-output">
						<div class="blog-navigation">
							<a href="/blog" class="nav-link">
								‚Üê Back to Blog
							</a>
							<a href="/" class="nav-link">
								üè† Home
							</a>
						</div>
					</div>

					<div class="terminal-line">
						<span class="prompt">nishant@dev:~$</span>
						<span class="cursor">‚ñà</span>
					</div>
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>

<style>
	body {
		background: var(--terminal-bg);
		color: var(--terminal-text);
		font-family: 'JetBrains Mono', 'Fira Code', 'Monaco', 'Consolas', monospace;
		margin: 0;
		padding: 0;
	}

	.terminal-window {
		max-width: 1000px;
		margin: 2rem auto;
		background: var(--terminal-surface);
		border-radius: 8px;
		box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
		overflow: hidden;
	}

	.terminal-header {
		background: var(--terminal-surface-alt);
		padding: 0.75rem 1rem;
		display: flex;
		align-items: center;
		border-bottom: 1px solid var(--terminal-border);
	}

	.terminal-buttons {
		display: flex;
		gap: 0.5rem;
		margin-right: 1rem;
	}

	.btn {
		width: 12px;
		height: 12px;
		border-radius: 50%;
	}

	.btn-red { background: var(--terminal-red); }
	.btn-yellow { background: var(--terminal-yellow); }
	.btn-green { background: var(--terminal-green); }

	.terminal-title {
		color: var(--terminal-text-muted);
		font-size: 0.9rem;
		font-weight: 500;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		flex: 1;
	}

	.terminal-body {
		padding: 1.5rem;
		font-size: 0.95rem;
		line-height: 1.6;
	}

	.terminal-line {
		margin-bottom: 0.5rem;
		display: flex;
		align-items: center;
	}

	.prompt {
		color: var(--terminal-accent);
		font-weight: 600;
		margin-right: 0.5rem;
		flex-shrink: 0;
	}

	.command {
		color: var(--terminal-blue);
		font-weight: 500;
	}

	.terminal-output {
		margin-left: 0;
		margin-bottom: 1rem;
		color: var(--terminal-text);
	}

	.blog-meta {
		margin: 1rem 0;
	}

	.blog-header {
		text-align: center;
		margin-bottom: 2rem;
	}

	.blog-header h1 {
		color: var(--terminal-accent);
		font-size: 1.8rem;
		margin: 0 0 1rem 0;
		font-weight: 700;
		line-height: 1.2;
	}

	.blog-date {
		color: var(--terminal-text-muted);
		font-size: 0.9rem;
		margin-bottom: 1rem;
	}

	.last-updated {
		color: var(--terminal-blue);
	}

	.blog-description {
		color: var(--terminal-text);
		font-size: 1rem;
		margin-bottom: 1rem;
		font-style: italic;
		line-height: 1.5;
	}

	.blog-tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		justify-content: center;
		margin-bottom: 1rem;
	}

	.tag {
		color: var(--terminal-blue);
		font-size: 0.8rem;
		background: var(--terminal-surface);
		padding: 0.2rem 0.5rem;
		border-radius: 12px;
		border: 1px solid var(--terminal-border);
	}

	.blog-content {
		margin: 2rem 0;
		line-height: 1.7;
	}

	.blog-content h1,
	.blog-content h2,
	.blog-content h3,
	.blog-content h4,
	.blog-content h5,
	.blog-content h6 {
		color: var(--terminal-accent);
		margin: 2rem 0 1rem 0;
		font-weight: 600;
	}

	.blog-content h1 {
		font-size: 1.5rem;
		border-bottom: 2px solid var(--terminal-border);
		padding-bottom: 0.5rem;
	}

	.blog-content h2 {
		font-size: 1.3rem;
	}

	.blog-content h3 {
		font-size: 1.1rem;
		color: var(--terminal-blue);
	}

	.blog-content p {
		margin-bottom: 1.5rem;
		color: var(--terminal-text);
	}

	.blog-content ul,
	.blog-content ol {
		margin-bottom: 1.5rem;
		padding-left: 1.5rem;
	}

	.blog-content li {
		margin-bottom: 0.5rem;
		color: var(--terminal-text);
	}

	.blog-content blockquote {
		border-left: 4px solid var(--terminal-accent);
		padding: 1rem 1.5rem;
		margin: 1.5rem 0;
		background: var(--terminal-bg);
		border-radius: 0 6px 6px 0;
		font-style: italic;
		color: var(--terminal-text-muted);
	}

	.blog-content code {
		background: var(--terminal-bg);
		padding: 0.2rem 0.4rem;
		border-radius: 4px;
		font-size: 0.9em;
		color: var(--terminal-accent);
		border: 1px solid var(--terminal-border);
	}

	.blog-content pre {
		background: var(--terminal-bg);
		padding: 1rem;
		border-radius: 6px;
		border: 1px solid var(--terminal-border);
		overflow-x: auto;
		margin: 1.5rem 0;
	}

	.blog-content pre code {
		background: none;
		border: none;
		padding: 0;
		color: var(--terminal-text);
	}

	.blog-content a {
		color: var(--terminal-blue);
		text-decoration: none;
		border-bottom: 1px solid transparent;
		transition: all 0.2s ease;
	}

	.blog-content a:hover {
		color: var(--terminal-blue-light);
		border-bottom-color: var(--terminal-blue);
	}

	.blog-content img {
		max-width: 100%;
		height: auto;
		border-radius: 6px;
		border: 1px solid var(--terminal-border);
		margin: 1rem 0;
	}

	.blog-navigation {
		display: flex;
		gap: 1rem;
		margin: 2rem 0;
		justify-content: center;
		flex-wrap: wrap;
	}

	.nav-link {
		color: var(--terminal-blue);
		text-decoration: none;
		padding: 0.5rem 1rem;
		border: 1px solid var(--terminal-border);
		border-radius: 4px;
		background: var(--terminal-surface);
		transition: all 0.2s ease;
		font-size: 0.9rem;
	}

	.nav-link:hover {
		background: var(--terminal-surface-alt);
		border-color: var(--terminal-blue);
		color: var(--terminal-blue-light);
		transform: translateY(-1px);
	}

	.cursor {
		color: var(--terminal-blue);
		animation: blink 1s infinite;
	}

	@keyframes blink {
		0%, 50% { opacity: 1; }
		51%, 100% { opacity: 0; }
	}

	@media (max-width: 768px) {
		.terminal-body {
			padding: 1rem;
			font-size: 0.85rem;
		}

		.blog-header h1 {
			font-size: 1.4rem;
		}

		.blog-content h1 {
			font-size: 1.3rem;
		}

		.blog-content h2 {
			font-size: 1.1rem;
		}

		.blog-content h3 {
			font-size: 1rem;
		}

		.blog-navigation {
			flex-direction: column;
			align-items: center;
		}

		.nav-link {
			width: 100%;
			text-align: center;
			max-width: 200px;
		}
	}
</style>